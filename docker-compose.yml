version: '3.7'

services:
  # fm-server:
  #   container_name: fm-server
  #   networks:
  #     - fm-net
  #   build:
  #     context: ./server
  #     dockerfile: dev.Dockerfile
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DATABASE: ${POSTGRES_NAME}
  #     POSTGRES_HOST: ${POSTGRES_HOST}
  #     POSTGRES_PORT: ${POSTGRES_PORT}
  #     CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
  #     CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
  #     CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
  #   volumes: # Sync changes on host with container
  #     - ./server/src:/app/src
  #   ports:
  #     - 4040:8080

  fm-server-v2:
    container_name: fm-server-v2
    networks:
      - fm-net
    build:
      context: ./serverv2
      dockerfile: dev.Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_NAME}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      REDIS_HOST: fm-redis
      SENDGRID: ${SENDGRID}
    volumes: # Sync changes on host with container
      - ./serverv2/src:/app/src
    ports:
      - 5050:8080
    depends_on:
      - fm-redis

  fm-client:
    container_name: fm-client
    networks:
      - fm-net
    build:
      context: ./client
      dockerfile: dev.Dockerfile
    ports:
      - 3030:80
    volumes: # Sync changes on host with container
      - ./client/pages:/app/pages
      - ./client/components:/app/components
      - ./client/graphql:/app/graphql
      - ./client/lib:/app/lib
      - ./client/public:/app/public
      - ./client/stores:/app/stores
      - ./client/utils:/app/utils
      - ./client/assets:/app/assets

  fm-client-v2:
    container_name: fm-client-v2
    networks:
      - fm-net
    build:
      context: ./clientv2
      dockerfile: dev.Dockerfile
    ports:
      - 2020:80
    volumes: # Sync changes on host with container
      - ./clientv2/src:/app/src
      - ./clientv2/public:/app/public

  fm-redis:
    container_name: fm-redis
    networks:
      - fm-net
    image: redis:latest

  fm-db:
    container_name: fm-db
    networks:
      - fm-net
    build:
      context: ./database
      dockerfile: dev.Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    ports:
      - 15432:5432 # Port 5432 is likely already in use

  nginx:
    container_name: fm-nginx
    build:
      context: ./nginx
      dockerfile: dev.Dockerfile
    networks:
      - fm-net
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80 # Port 80 is likely already in use
    depends_on:
      - fm-db
      # - fm-server
      - fm-server-v2
    logging:
      driver: none

networks:
  fm-net:
