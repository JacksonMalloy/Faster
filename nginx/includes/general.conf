client_max_body_size 15M;

# Hack to prevent Nginx from infinitely restarting if container isn't included in docker-compose.yml
# set $upstream_um_server http://fm-server:8080;
# set $upstream_um_client http://sellers:80;
# set $upstream_um_server_v2 http://fm-server-v2:8080;
# set $upstream_um_server_v2_subscriptions http://fm-server-v2:8080/subscriptions;

# location /api {
#     rewrite ^/api/?(.*) /$1 break; # Strip api from path before making request to Node server
#     resolver 127.0.0.11;
#     proxy_pass $upstream_um_server;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
# }
# location /api/v2 {
#     rewrite ^/api/?(.*) /$1 break; # Strip api from path before making request to Node server
#     resolver 127.0.0.11;
#     proxy_pass $upstream_um_server_v2;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
# }
location / {
    # resolver 127.0.0.11;
    # proxy_pass $upstream_um_client;
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection 'upgrade';
    # proxy_set_header Host $host;
    # proxy_cache_bypass $http_upgrade;
    proxy_pass http://fm-server-v2:8080
}

# location /subscriptions {
#     proxy_pass http://fm-server-v2:8080/subscriptions;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "upgrade";
# }

# location /graphql {
#     proxy_pass http://fm-server-v2:8080/;
# }